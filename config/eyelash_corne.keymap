#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            label = "RPI";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };

        leftlt: leftlt {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFTLT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 34 42 43 44>;
        };

        rightlt: rightlt {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHTLT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 11 12 19 20 21 22 23 24 25 26 27 35 36 37 38 39 40 41 45 46 47>;
        };

        escGRAVE: escGRAVE {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE>, <&kp GRAVE>;

            label = "ESCGRAVE";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        appt: snipping {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp T &kp T &kp P &kp S &kp COLON &kp FSLH &kp FSLH &kp C &kp A &kp L &kp E &kp N &kp D &kp A &kp R &kp DOT &kp A &kp P &kp P &kp DOT &kp G &kp O &kp O &kp G &kp L &kp E &kp FSLH &kp LS(D) &kp LS(D) &kp J &kp N5 &kp V &kp LS(P) &kp C &kp C &kp N8 &kp N5 &kp B &kp N3 &kp D &kp N1 &kp G &kp P &kp N8 &kp RET>;
            label = "SNIPPING";
        };

        subcribe: subcribe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(M) &kp N2 &kp N0 &kp N0 &kp N8 &kp N1 &kp N8 &kp N1 &kp N9 &kp N0 &kp N5 &kp N3 &kp N4 &kp N5 &kp N0>;
            label = "SUBCRIBE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&escGRAVE         &kp Q  &kp W  &kp E            &kp R            &kp T                                          &kp UP               &kp Y             &kp U             &kp I           &kp O    &kp P          &kp BSPC
&kp LEFT_CONTROL  &kp A  &kp S  &kp D            &kp F            &kp G                                &kp LEFT  &trans    &kp RIGHT  &kp H             &kp J             &kp K           &kp L    &kp SEMICOLON  &kp SQT
&td0              &kp Z  &kp X  &kp C            &kp V            &kp B          &lt 5 C_PLAY_PAUSE              &kp DOWN             &kp N             &kp M             &kp COMMA       &kp DOT  &kp FSLH       &kp RSHIFT
                                &leftlt 1 SPACE  &leftlt 0 SPACE  &leftlt 3 TAB                                                       &rightlt 2 ENTER  &rightlt 0 SPACE  &rightlt 4 DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Navigation {
            bindings = <
&trans  &kp K_REDO      &kp K_COPY    &kp K_CUT      &kp K_PASTE  &kp K_UNDO                                   &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN       &kp RIGHT    &kp ESCAPE                           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp END         &kp PAGE_UP   &kp PAGE_DOWN  &kp HOME     &kp INSERT    &kp LC(KP_NUMBER_0)            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                      &kp SPACE      &kp TAB      &kp LEFT_ALT                                                 &trans  &trans  &trans
            >;

            label = "Nav";
            sensor-bindings = <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
        };

        Symbols {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp LS(AMPS)  &kp LS(STAR)          &kp LS(LPAR)           &kp LS(RIGHT_BRACKET)                       &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp PLUS          &kp LS(DLLR)  &kp LS(PRCNT)         &kp LS(CARET)          &kp EQUAL                           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(LBRC)      &kp LS(EXCL)  &kp LS(AT)            &kp LS(POUND)          &kp LS(RBRC)           &kp GRAVE            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LS(UNDER)                                               &trans  &trans  &trans
            >;

            label = "Sym";
        };

        Numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                            &kp UP_ARROW                     &kp KP_DIVIDE  &kp N7        &kp N8        &kp N9        &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &kp LEFT_ARROW  &trans          &kp RIGHT_ARROW  &kp EQUAL      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &kp DOWN_ARROW                   &kp PLUS       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RET          &trans
                        &trans  &trans  &trans                                                             &kp MINUS      &kp N0        &kp PERIOD
            >;

            label = "Num";
        };

        Functions {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &kp PSCRN        &kp F9     &kp F10     &kp F11  &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &kp SLCK         &kp F5     &kp F6      &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &kp PAUSE_BREAK  &kp F1     &kp F2      &kp F3   &kp F4   &trans
                        &trans  &trans  &trans                                    &kp TAB          &kp SPACE  &kp K_MENU
            >;

            label = "Fun";
        };

        RGB {
            bindings = <
&rgb_ug RGB_SPI                    &rgb_ug RGB_BRI                   &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_ON   &trans                        &kp C_VOLUME_UP                &trans  &trans         &trans  &trans  &trans  &trans
&rgb_ug RGB_COLOR_HSB(290,100,50)  &rgb_ug RGB_COLOR_HSB(157,94,58)  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &trans            &kp C_PREV  &kp K_PLAY_PAUSE   &kp C_NEXT  &trans  &kp LS(LG(S))  &trans  &trans  &trans  &trans
&rgb_ug RGB_SPD                    &rgb_ug RGB_BRD                   &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_OFF  &trans  &trans                &kp C_VOLUME_DOWN              &trans  &trans         &trans  &trans  &trans  &trans
                                                                                      &trans           &trans           &trans                                                       &trans  &trans         &trans
            >;
        };
    };
};
