#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            label = "RPI";
            bindings = <&none>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE      &kp Q           &kp W           &kp E        &kp R        &kp T                                      &kp UP               &kp Y        &kp U        &kp I                &kp O            &kp P                    &kp BSPC
&kp CAPS        &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &kp F        &kp G                            &kp LEFT  &td0      &kp RIGHT  &kp H        &kp J        &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z           &kp X           &kp C        &kp V        &kp B      &lt 1 C_PLAY_PAUSE              &kp DOWN             &kp N        &kp M        &kp COMMA            &kp DOT          &kp FSLH                 &kp RSHIFT
                                                &lt 3 SPACE  &lt 5 SPACE  &lt 4 TAB                                                       &lt 7 ENTER  &lt 2 SPACE  &lt 6 DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Media {
            display-name = "Media";
            bindings = <
&kp  &kp  &kp  &kp  &kp  &kp                     &kp C_VOLUME_UP                &kp  &kp  &kp  &kp  &kp  &kp
&kp  &kp  &kp  &kp  &kp  &kp         &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT  &kp  &kp  &kp  &kp  &kp  &kp
&kp  &kp  &kp  &kp  &kp  &kp  &kp                &kp C_VOLUME_DOWN              &kp  &kp  &kp  &kp  &kp  &kp
               &kp  &kp  &kp                                                    &kp  &kp  &kp
            >;
        };

        Navigation {
            display-name = "NAV";
            bindings = <
&kp  &kp K_REDO      &kp K_COPY    &kp K_CUT      &kp K_PASTE  &kp K_UNDO                                &kp       &kp  &kp  &kp  &kp  &kp  &kp
&kp  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN       &kp RIGHT    &kp ESCAPE                           &kp  &kp  &kp  &kp  &kp  &kp  &kp  &kp  &kp
&kp  &kp END         &kp PAGE_UP   &kp PAGE_DOWN  &kp HOME     &kp INSERT    &kp LC(KP_NUMBER_0)         &kp       &kp  &kp  &kp  &kp  &kp  &kp
                                   &kp SPACE      &kp TAB      &kp LEFT_ALT                                        &kp  &kp  &kp
            >;

            sensor-bindings = <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
        };

        CustomScripts {
            display-name = "Macro";
            bindings = <
&kp  &kp  &kp  &kp  &kp  &kp              &kp       &kp           &kp         &kp         &kp  &kp  &kp
&kp  &kp  &kp  &kp  &kp  &kp         &kp  &kp  &kp  &google_appt  &odoo_code  &snip_tool  &kp  &kp  &kp
&kp  &kp  &kp  &kp  &kp  &kp  &kp         &kp       &kp           &kp         &kp         &kp  &kp  &kp
               &kp  &kp  &kp                        &kp           &kp         &kp
            >;
        };

        Symbols {
            display-name = "SYM";
            bindings = <
&kp  &kp  &kp  &kp  &kp  &kp              &kp       &kp KP_DIVIDE         &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp EXCLAMATION  &kp TILDE
&kp  &kp  &kp  &kp  &kp  &kp         &kp  &kp  &kp  &kp EQUAL             &kp UNDER              &kp MINUS        &kp AT             &kp AMPS         &kp
&kp  &kp  &kp  &kp  &kp  &kp  &kp         &kp       &kp PLUS              &kp ASTERISK           &kp PERCENT      &kp PIPE           &kp HASH         &kp
               &kp  &kp  &kp                        &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET       &kp LEFT_BRACE
            >;
        };

        Numbers {
            display-name = "NUM";
            bindings = <
&kp  &kp  &kp  &kp  &kp  &kp                         &kp UP_ARROW                     &kp KP_DIVIDE  &kp N7        &kp N8        &kp N9        &kp KP_MULTIPLY  &kp
&kp  &kp  &kp  &kp  &kp  &kp         &kp LEFT_ARROW  &kp             &kp RIGHT_ARROW  &kp EQUAL      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS         &kp
&kp  &kp  &kp  &kp  &kp  &kp  &kp                    &kp DOWN_ARROW                   &kp PLUS       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RET          &kp
               &kp  &kp  &kp                                                          &kp MINUS      &kp N0        &kp PERIOD
            >;
        };

        Functions {
            display-name = "FUNC";
            bindings = <
&kp  &kp F9  &kp F10  &kp F11     &kp F12    &kp PSCRN                    &kp       &kp  &kp  &kp  &kp  &kp  &kp
&kp  &kp F5  &kp F6   &kp F7      &kp F8     &kp SCROLLLOCK          &kp  &kp  &kp  &kp  &kp  &kp  &kp  &kp  &kp
&kp  &kp F1  &kp F2   &kp F3      &kp F4     &kp PAUSE_BREAK  &kp         &kp       &kp  &kp  &kp  &kp  &kp  &kp
                      &kp K_MENU  &kp SPACE  &kp TAB                                &kp  &kp  &kp
            >;
        };

        RGB {
            display-name = "RGB";
            bindings = <
&rgb_ug RGB_SPI                    &rgb_ug RGB_BRI                   &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_ON   &kp              &kp       &kp  &kp  &kp  &kp  &kp  &kp
&rgb_ug RGB_COLOR_HSB(290,100,50)  &rgb_ug RGB_COLOR_HSB(157,94,58)  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &kp         &kp  &kp  &kp  &kp  &kp  &kp  &kp  &kp  &kp
&rgb_ug RGB_SPD                    &rgb_ug RGB_BRD                   &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_OFF  &kp  &kp         &kp       &kp  &kp  &kp  &kp  &kp  &kp
                                                                                      &kp              &kp              &kp                        &kp  &kp  &kp
            >;
            sensor-bindings = <&inc_dec_kp 0 0>;
        };
    };
};
